/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
//解法一：使链表后端对齐，然后使长链表剪短（剪头部）后依次对比
class Solution {
public:
    ListNode *getIntersectionNode(ListNode *headA, ListNode *headB) {
        if(headA==NULL ||headB==NULL) return NULL;
        int lenA=getLength(headA),lenB=getLength(headB);
        bool flag=false;
        if(lenA>lenB){
            for(int i =0;i<lenA-lenB;i++) headA=headA->next;     
        }
        if(lenA<lenB){
            for(int i =0;i<lenB-lenA;i++) headB=headB->next;
        }
        while(headA!=NULL){
            if(headA==headB){
                flag=true;
                break;
            }
            headA=headA->next;
            headB=headB->next;
        }
        if(flag==false) return NULL;
        else return headA;
    }
    int getLength(ListNode *head){
        int len = 0;
        while(head!=NULL){
            len++;
            head=head->next;
        }
        return len;
    }
};